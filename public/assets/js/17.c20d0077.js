(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{337:function(n,e,t){"use strict";t.r(e);var a=t(0),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"containerd与kubernetes集成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#containerd与kubernetes集成"}},[n._v("#")]),n._v(" containerd与kubernetes集成")]),n._v(" "),t("h2",{attrs:{id:"概念介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念介绍"}},[n._v("#")]),n._v(" 概念介绍")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("cri (Container runtime interface)")]),n._v(" "),t("ul",[t("li",[t("code",[n._v("cri")]),n._v(" is a "),t("a",{attrs:{href:"https://containerd.io/",target:"_blank",rel:"noopener noreferrer"}},[n._v("containerd"),t("OutboundLink")],1),n._v(" plugin implementation of Kubernetes "),t("a",{attrs:{href:"https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/cri/runtime/v1alpha2/api.proto",target:"_blank",rel:"noopener noreferrer"}},[n._v("container runtime interface (CRI)"),t("OutboundLink")],1),n._v(".")]),n._v(" "),t("li",[n._v("cri是 kubernetes的容器运行时接口的容器插件实现。\n")]),n._v(" "),t("li",[t("img",{attrs:{src:"/cri.jpg",alt:"CRI"}})])])]),n._v(" "),t("li",[t("p",[n._v("containerd")]),n._v(" "),t("ul",[t("li",[n._v("containerd is an industry-standard container runtime with an emphasis on simplicity, robustness and portability.")]),n._v(" "),t("li",[n._v("containerd完全支持运行容器的的CRI运行时规范。")]),n._v(" "),t("li",[n._v("cri在containerd1.1以上的版本的原生插件。它内置于containerd并默认启用。")]),n._v(" "),t("li",[t("img",{attrs:{src:"/containerd.png",alt:"containerd"}})])])]),n._v(" "),t("li",[t("p",[n._v("cri-o")]),n._v(" "),t("ul",[t("li",[n._v("OCI-based implementation of Kubernetes Container Runtime Interface.")]),n._v(" "),t("li",[n._v("kubernetes为了兼容cri和oci孵化了项目cri-o。为了架设在cri和oci之间的一座桥梁。由此cri-o既兼容cri插件实现又兼容oci的容器运行时标准。")])])]),n._v(" "),t("li",[t("p",[n._v("oci (Open Container Initiative)")]),n._v(" "),t("ul",[t("li",[n._v("https://www.opencontainers.org/about/oci-scope-table")]),n._v(" "),t("li",[n._v("oci是由多家公司成立的项目,并由linux基金会进行管理,致力于container runtime 的标准的制定和runc的开发等工作。")])])]),n._v(" "),t("li",[t("p",[n._v("runc")]),n._v(" "),t("ul",[t("li",[t("code",[n._v("runc")]),n._v(" is a CLI tool for spawning and running containers according to the OCI specification.")]),n._v(" "),t("li",[n._v("runc，是对于OCI标准的一个参考实现，是一个可以用于创建和运行容器的CLI(command-line interface)工具。")])]),n._v(" "),t("p",[t("img",{attrs:{src:"/kubelet.png",alt:""}})])])]),n._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[n._v("#")]),n._v(" 概述")]),n._v(" "),t("p",[n._v("由于docker嵌入了太多自身内容,为了减轻容器负担。此次选用containerd作为kubernetes的容器实现方案。本文将带大家讲述如何搭建一个集成了containerd的k8s集群。")]),n._v(" "),t("h2",{attrs:{id:"环境准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[n._v("#")]),n._v(" 环境准备")]),n._v(" "),t("p",[n._v("下载containerd二进制包。我这里已经编译并打包了好了，内含containerd、runc、crictl、ctr等。")]),n._v(" "),t("p",[n._v("下载链接：https://github.com/cuisongliu/containerd-dist/releases/download/v1.2.4/containerd-v1.2.4.tar.gz")]),n._v(" "),t("ul",[t("li",[n._v("runc版本：  1.0.1-dev")]),n._v(" "),t("li",[n._v("containerd版本： v1.2.4")])]),n._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[n._v("#")]),n._v(" 安装")]),n._v(" "),t("h3",{attrs:{id:"安装containerd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装containerd"}},[n._v("#")]),n._v(" 安装containerd")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("解压二进制包并生成默认文件")]),n._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("tar -C /usr/local/bin -xzf containerd-v1.2.4.tar.gz\nchmod a+x /usr/local/bin/*\ncontainerd config default > /etc/containerd/config.toml\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("p",[n._v("生成的默认配置文件注意  "),t("code",[n._v("[grpc]")]),n._v(" 的 "),t("code",[n._v("address")]),n._v("  字段默认为 "),t("code",[n._v("/run/containerd/containerd.sock")])]),n._v(" "),t("p",[n._v("配置文件其他参数含义参照github地址： https://github.com/containerd/containerd/blob/master/docs/man/containerd-config.toml.5.md")])]),n._v(" "),t("li",[t("p",[n._v("在  "),t("code",[n._v("/etc/systemd/system")]),n._v(" 目录下编写文件  "),t("code",[n._v("containerd.service")]),n._v("内容如下")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("[Unit]\nDescription=containerd container runtime\nDocumentation=https://containerd.io\nAfter=network.target\n\n[Service]\nExecStartPre=/sbin/modprobe overlay\nExecStart=/usr/local/bin/containerd\nRestart=always\nRestartSec=5\nDelegate=yes\nKillMode=process\nOOMScoreAdjust=-999\nLimitNOFILE=1048576\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n# in the kernel. We recommend using cgroups to do container-local accounting.\nLimitNPROC=infinity\nLimitCORE=infinity\n\n[Install]\nWantedBy=multi-user.target\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br")])])]),n._v(" "),t("li",[t("p",[n._v("启动containerd")]),n._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("systemctl enable containerd\nsystemctl restart containerd\nsystemctl status containerd\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("p",[n._v("看containerd启动状态如果是running就没有问题。下面我们测试拉取一下hub的镜像。")])]),n._v(" "),t("li",[t("p",[n._v("测试containerd")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("ctr images pull docker.io/library/nginx:alpine\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("看到输出done，说明containerd运行一切正常。")])])]),n._v(" "),t("h3",{attrs:{id:"使用crictl连接containerd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用crictl连接containerd"}},[n._v("#")]),n._v(" 使用crictl连接containerd")]),n._v(" "),t("p",[n._v("下一步我们使用crictl连接containerd。")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("修改crictl的配置文件,在  "),t("code",[n._v("/etc/crictl.yaml")]),n._v(" 写入以下内容：")]),n._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("runtime-endpoint: unix:///run/containerd/containerd.sock\nimage-endpoint: unix:///run/containerd/containerd.sock\ntimeout: 10\ndebug: false\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br")])]),t("p",[n._v("这里注意runtime-endpoint 和image-endpoint 必须与/etc/containerd/config.toml中配置保持一致。")])]),n._v(" "),t("li",[t("p",[n._v("验证一下cri插件是否可用")]),n._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("crictl  pull nginx:alpine\ncrictl  rmi  nginx:alpine\ncrictl  images\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("p",[n._v("其中   "),t("code",[n._v("crictl images")]),n._v("  会列出所有的cri容器镜像。")]),n._v(" "),t("p",[n._v("到此我们的cri + containerd已经完成整合了。下一步我们需要修改kubeadm配置进行安装。")])])]),n._v(" "),t("h3",{attrs:{id:"导入kubenetes离线镜像包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入kubenetes离线镜像包"}},[n._v("#")]),n._v(" 导入kubenetes离线镜像包")]),n._v(" "),t("p",[n._v("这里我们就需要导入k8s的离线镜像包了。"),t("strong",[n._v("这里需要注意一下，kubernetes是调用的cri接口,所以导入时也需要从cri插件导入镜像。")])]),n._v(" "),t("ul",[t("li",[t("p",[n._v("cri导入镜像命令(cri导入镜像)：")]),n._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" ctr cri load  images.tar\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])])]),n._v(" "),t("li",[t("p",[n._v("containerd导入镜像命令(containerd导入镜像)：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" ctr images import images.tar \n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])])])]),n._v(" "),t("h3",{attrs:{id:"修改kubelet配置和kubeadm安装时配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改kubelet配置和kubeadm安装时配置"}},[n._v("#")]),n._v(" 修改kubelet配置和kubeadm安装时配置")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("在 kubelet配置文件 10-kubeadm.conf 的"),t("code",[n._v("[Service]")]),n._v(" 结点加入以下配置：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('Environment="KUBELET_EXTRA_ARGS=--container-runtime=remote --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock"\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])])]),n._v(" "),t("li",[t("p",[n._v("在kubeadm配置文件 kubeadm.yaml 中加入")]),n._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" kubeadm.k8s.io/v1beta1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" InitConfiguration\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("nodeRegistration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("criSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" /run/containerd/containerd.sock\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" containerd\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("到此containerd和kubernetes的集成就完成了。下面可以直接安装即可。")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);